{"version":3,"sources":["webpack:///./src/components/SideBar/SideBar.tsx","webpack:///./src/pagecomponents/AuthorPage/AuthorPage.tsx","webpack:///./src/components/CategoryBar/CategoryBar.tsx","webpack:///./src/components/Post/PostHeader.tsx","webpack:///./src/components/Post/PostPreview.tsx","webpack:///./src/components/Content/EmptyContent.tsx","webpack:///./src/components/Post/PostList.tsx"],"names":["SideBar","props","onScroll","ev","offset","window","scrollY","container","document","getElementById","setState","fixed","offsetTop","state","componentDidMount","this","isFixed","addEventListener","componentWillUnmount","removeEventListener","render","className","children","React","Component","AuthorPage","posts","data","edges","map","e","node","sort","a","b","fields","timestamp","categories","header","url","urlJoin","context","author","frontmatter","slug","description","firstname","lastname","type","title","tags","image","avatar","childImageSharp","src","sidebar","badge","authorBadge","nestCategories","authors","Page","pageContext","location","pageQuery","CategoryBar","PostHeader","date","moment","update","updatedate","Math","abs","diff","isAfter","to","format","subtitle","PostPreview","post","commentCnt","content","abstract","excerpt","EmptyContent","PostList","p","i","key","c","getCategory","getAuthor","length"],"mappings":"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","file":"component---src-pagecomponents-author-page-author-page-tsx-8579df756f5ec63bb63d.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class SideBar extends React.Component<{isFixed: boolean, children: any}, {fixed: boolean}>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      fixed: false\r\n    }\r\n  }\r\n\r\n  onScroll = (ev: Event) => {\r\n    let offset = window.scrollY;\r\n    let container = document.getElementById(\"content-container\");\r\n    this.setState({\r\n      fixed: offset > container.offsetTop\r\n    });\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    if(this.props.isFixed == true)\r\n      window.addEventListener(\"scroll\", this.onScroll);\r\n  }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    if(this.props.isFixed == true)\r\n      window.removeEventListener(\"scroll\", this.onScroll);\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className={this.state.fixed == true ? \"sidebar-fixed\" : \"sidebar-not-fixed\"}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { AuthorContent } from \"../../components/Author/AuthorContent\";\r\nimport { IPost, ICategory, IAuthor, IQueryArrayResult, IGatsbyLocation } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from \"../../components/Layout/ContentLayout\";\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { SideBarQuickstart } from \"../../components/SideBar/SideBarQuickstart\";\r\nimport { SideBarHelp } from \"../../components/SideBar/SideBarHelp\";\r\nimport { CategoryBar } from \"../../components/CategoryBar/CategoryBar\";\r\nimport { PostList } from \"../../components/Post/PostList\";\r\nimport { urlJoin, nestCategories } from '../../tool';\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\n\r\ninterface IQueryResult \r\n{\r\n  data: {\r\n    posts: IQueryArrayResult<IPost>;\r\n    categories: IQueryArrayResult<ICategory>;\r\n    avatar: any;\r\n    authorBadge: any;\r\n  }\r\n  context: {\r\n    author: IAuthor;\r\n  }\r\n  location: IGatsbyLocation;\r\n}\r\nexport class AuthorPage extends React.Component<IQueryResult>\r\n{\r\n  render() \r\n  {\r\n    let posts      = this.props.data.posts.edges\r\n      .map(e => e.node)\r\n      .sort((a,b) => {\r\n        if(a.fields.timestamp > b.fields.timestamp)\r\n          return -1\r\n        else\r\n          return 1;\r\n      });\r\n\r\n    let categories = this.props.data.categories.edges.map(e => e.node);\r\n\r\n    let header: IHeaderProps = {\r\n      url: urlJoin(\"author\", this.props.context.author.frontmatter.slug),\r\n      description: `Posts von ${this.props.context.author.frontmatter.firstname + \" \" + this.props.context.author.frontmatter.lastname}`,\r\n      type: \"object\",\r\n      title: `${this.props.context.author.frontmatter.firstname + \" \" + this.props.context.author.frontmatter.lastname}, Autor bei Durchblick durch Daten`,\r\n      tags: [\"author\", this.props.context.author.frontmatter.firstname, this.props.context.author.frontmatter.lastname],\r\n      image: this.props.data.avatar.childImageSharp.fixed.src\r\n    }\r\n    return(\r\n      <ContentLayoutWithSidebar \r\n        header={header}\r\n        sidebar={(\r\n          <SideBar isFixed={false}>\r\n            <SideBarQuickstart/>\r\n            <SideBarHelp/>\r\n            {/* <SideBarCategories/> */}\r\n          </SideBar> \r\n        )} \r\n        >\r\n      <CategoryBar title={\"Author\"}/>\r\n      <AuthorContent badge={this.props.data.authorBadge} author={this.props.context.author} avatar={this.props.data.avatar}></AuthorContent>\r\n      <hr/>\r\n      <PostList posts={posts} categories={nestCategories(categories)} authors={[this.props.context.author]}/>\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst Page = ({data, pageContext, location}) => {\r\n  return (\r\n    <AuthorPage data={data} context={pageContext} location={location}></AuthorPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n\r\nexport const pageQuery = graphql`\r\n  query authorPosts($authorSlug: String!, $avatar: String!, $authorBadge: String, $now: Int!) {\r\n    posts: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: {\r\n          regex: \"/.*\\/data\\/posts\\/.*[.]md/\"\r\n        }\r\n        frontmatter: {\r\n          author: {\r\n            eq: $authorSlug\r\n          }\r\n        }\r\n        fields: {\r\n          publishTimestamp:{\r\n            lt: $now\r\n          }\r\n        }\r\n      }\r\n    )\r\n    {\r\n      edges {\r\n        node {\r\n          ...postShort\r\n        }\r\n      }\r\n    }\r\n    avatar: file(\r\n    \tabsolutePath: { regex: \"/.*\\/data\\/img\\//\"}  \r\n      name:{ eq: $avatar}\r\n    ){\r\n      childImageSharp {\r\n        fixed(width: 100, height: 100) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    authorBadge: file(\r\n    \tabsolutePath: { regex: \"/.*\\/data\\/img\\//\"}  \r\n      name:{ eq: $authorBadge}\r\n    ){\r\n      childImageSharp {\r\n        fixed(width: 100, height: 100) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    ...categories\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport \"./CategoryBar.sass\"\r\n\r\ninterface CategoryBarProps {\r\n  title: string;\r\n}\r\n\r\nexport class CategoryBar extends React.Component<CategoryBarProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <h1>\r\n          {this.props.title}\r\n        </h1> */}\r\n        <div className=\"category-bar\">\r\n          {this.props.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { FaClock, FaUser, FaEdit } from \"react-icons/fa\"\r\nimport * as moment from \"moment\";\r\nimport { INestedCategory } from '../../tool';\r\nimport { IAuthor, IPostSummaryFrontmatter } from '../../interfaces';\r\n\r\ninterface IProps\r\n{\r\n  author: IAuthor;\r\n  commentCnt: number;\r\n  isPreview?: boolean;\r\n  frontmatter: IPostSummaryFrontmatter;\r\n  categories: INestedCategory[];\r\n}\r\n\r\nexport class PostHeader extends React.Component<IProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const dateFormat = \"DD. MMM YYYY\"\r\n    let date = moment(this.props.frontmatter.date);\r\n    let update = null;\r\n    if(this.props.frontmatter.updatedate != null && this.props.frontmatter.updatedate != \"\")\r\n    {\r\n      update = moment(this.props.frontmatter.updatedate);\r\n      if(Math.abs(date.diff(update)) >= 86400000 || update.isAfter(date) == true)\r\n      {\r\n        update = moment(this.props.frontmatter.updatedate);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"post-header\">\r\n        <div className=\"post-meta\">\r\n          <div title=\"Author\">\r\n            <Link className=\"post-meta-data post-meta-content\" to={\"/author/\"+this.props.author.frontmatter.slug}> \r\n              <FaUser/> \r\n              <span>{this.props.author != null ? this.props.author.frontmatter.firstname + \" \" + this.props.author.frontmatter.lastname : \"\"}</span>\r\n            </Link>\r\n          </div>\r\n          {\r\n            update != null ? <div title=\"Bearbeitet\" className=\"post-meta-data post-meta-time\">\r\n              <FaEdit/>\r\n              <span className=\"post-meta-content\">{update.format(dateFormat)}</span> \r\n            </div> : \"\"\r\n          }\r\n          <div title=\"Angelegt\" className=\" post-meta-data post-meta-time\">\r\n            <FaClock/> \r\n            <span className=\"post-meta-content\">{date.format(dateFormat)}</span> \r\n          </div>\r\n        </div>\r\n        <div className=\"post-subtitle\">\r\n        {\r\n          this.props.frontmatter.subtitle != null ? <Link to={\"/\"+this.props.frontmatter.slug}>{this.props.frontmatter.subtitle}</Link> : \"\"\r\n        }\r\n        </div>\r\n        <div>\r\n          <h1>\r\n            <Link to={\"/\"+this.props.frontmatter.slug}>{this.props.frontmatter.title}</Link>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { PostHeader } from './PostHeader';\r\nimport { HTMLContent } from \"../Content/Content\";\r\nimport { INestedCategory } from \"../../tool\";\r\nimport { IPostSummary, IAuthor } from \"../../interfaces\";\r\n\r\ninterface Props\r\n{\r\n  post: IPostSummary;\r\n  categories: INestedCategory[];\r\n  author: IAuthor;\r\n}\r\n\r\nexport class PostPreview extends React.Component<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { post } = this.props;\r\n    return (\r\n      <div className=\"post-preview\">\r\n        <div>\r\n          <PostHeader frontmatter={post.frontmatter} commentCnt={post.fields.commentCnt} author={this.props.author} categories={this.props.categories}/>\r\n        </div>\r\n        <div className=\"post-content\">\r\n        <Link to={\"/\"+post.frontmatter.slug}>\r\n          <HTMLContent content={this.props.post.fields.abstract ? this.props.post.fields.abstract : this.props.post.excerpt}> </HTMLContent>\r\n        </Link>\r\n          {/* <div>\r\n            <Link to={post.frontmatter.slug}><span style={{verticalAlign: \"middle\"}}><FaLongArrowAltRight/></span> Mehr</Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./Content.sass\"\r\n\r\nexport class EmptyContent extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"empty-content-container\">Hier gibt es noch keine Inhalte</div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IAuthor, IPostSummary } from '../../interfaces';\r\nimport { getCategory, getAuthor, INestedCategory } from \"../../tool\";\r\nimport { PostPreview } from \"./PostPreview\";\r\nimport { EmptyContent } from \"../Content/EmptyContent\";\r\n\r\n\r\n\r\nexport class PostList extends React.Component<{posts: IPostSummary[], categories: INestedCategory[], authors: IAuthor[]}>\r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n      {\r\n        this.props.posts.map((p,i) => (\r\n          <div key={i}>\r\n            <PostPreview post={p} categories={p.frontmatter.categories.map(c => getCategory(c, this.props.categories))} author={getAuthor(p.frontmatter.author, this.props.authors)}></PostPreview>\r\n          </div>\r\n        ))\r\n      }\r\n      {\r\n        this.props.posts.length == 0 ? <EmptyContent/> : \"\"\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}