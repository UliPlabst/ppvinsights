{"version":3,"sources":["webpack:///./src/pagecomponents/SpecialPage/SpecialPage.tsx"],"names":["SpecialPageTemplate","props","render","page","this","data","categories","nestCategories","edges","map","e","node","stories","cat","frontmatter","c","getCategory","tags","tagNodes","n","t","find","tag","slug","header","url","description","type","title","name","image","updated_time","updatedate","publish_time","date","sidebar","isFixed","sidebarFixed","i","key","mapSidebarComponent","categoryBar","postheader","commentCnt","fields","author","context","className","html","htmlAst","subscriberContent","length","content","comments","footer","mapFooterComponent","avatar","location","authorBadge","React","Component","Page","pageContext","pageQuery"],"mappings":"0TA+BaA,EAAb,YAEE,WAAYC,GACZ,OACE,YAAMA,IADR,KAHF,oCAMEC,OAAA,WACA,WACMC,EAAOC,KAAKH,MAAMI,KAAKF,KACvBG,EAAaC,YAAeH,KAAKH,MAAMI,KAAKC,WAAWE,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SACxEC,EAAUR,KAAKH,MAAMI,KAAKO,QAAQJ,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QACnDE,EAAMV,EAAKW,YAAYR,WAAWG,KAAI,SAAAM,GAAC,OAAIC,YAAYD,EAAGT,MAC1DW,EAAe,KACnB,GAAGd,EAAKW,YAAYG,KACpB,CACE,IAAIC,EAAWd,KAAKH,MAAMI,KAAKY,KAAKT,MAAMC,KAAI,SAAAU,GAAC,OAAIA,EAAER,QACrDM,EAAOd,EAAKW,YAAYG,KAAKR,KAAI,SAAAW,GAAC,OAAIF,EAASG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAQH,QAGzE,IAAII,EAAuB,CACzBC,IAAKtB,EAAKW,YAAYS,KACtBG,YAAavB,EAAKW,YAAYY,YAC9BC,KAAM,UACNC,MAAOzB,EAAKW,YAAYc,MACxBX,KAAMA,EAAKR,KAAI,SAAAW,GAAC,OAAIA,EAAES,QACtBC,MAAO3B,EAAKW,YAAYgB,MACxBC,aAAc5B,EAAKW,YAAYkB,WAC/BC,aAAc9B,EAAKW,YAAYoB,MAGjC,OACE,kBAAC,IAAD,CACEC,QACE,kBAAC,IAAD,CAASC,QAAShC,KAAKH,MAAMI,KAAKF,KAAKW,YAAYuB,cAE/ClC,EAAKW,YAAYqB,QAAQ1B,KAAI,SAACM,EAAEuB,GAAH,OAC3B,yBAAKC,IAAKD,GAENE,YAAoBzB,EAAGZ,QAOnCsC,YAAa,KACbjB,OAAQA,IAGwB,IAAhCrB,EAAKW,YAAY4B,WAAsB,kBAAC,IAAD,CAAY5B,YAAaX,EAAKW,YAAa6B,WAAYxC,EAAKyC,OAAOD,WAAYE,OAAQzC,KAAKH,MAAM6C,QAAQD,OAAQvC,WAAYO,IAAU,GAE/K,yBAAKkC,UAAU,gBACb,kBAAC,IAAD,CAAkBC,KAAM7C,EAAK8C,UAEO,MAAjC9C,EAAKyC,OAAOM,mBAAqE,GAAxC/C,EAAKyC,OAAOM,kBAAkBC,OACxE,GAEA,kBAAC,IAAD,CAAkBC,QAASjD,EAAKyC,OAAOM,qBAIZ,GAA7B/C,EAAKW,YAAYuC,SACjB,kBAAC,IAAD,CAAe9B,KAAMpB,EAAKW,YAAYS,KAAM8B,SAAUjD,KAAKH,MAAM6C,QAAQO,WACvE,GAIFlD,EAAKW,YAAYwC,OAAO7C,KAAI,SAACM,EAAEuB,GAAH,OAC1B,yBAAKC,IAAKD,GAERiB,YAAmBxC,EAAGZ,EAAMU,EAAK,EAAKZ,MAAM6C,QAAQD,OAAQjC,EAAS,EAAKX,MAAMI,KAAKmD,OAAQ,EAAKvD,MAAMI,KAAKY,KAAKT,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAO,EAAKV,MAAMwD,SAAU,EAAKxD,MAAMI,KAAKqD,mBAtE7L,GAAyCC,IAAMC,WAqFhCC,UALF,SAAC,GAAkC,IAAjCxD,EAAiC,EAAjCA,KAAMyD,EAA2B,EAA3BA,YAAaL,EAAc,EAAdA,SAChC,OACE,kBAACzD,EAAD,CAAqByD,SAAUA,EAAUpD,KAAMA,EAAMyC,QAASgB,KAK3D,IAAMC,EAAY","file":"component---src-pagecomponents-special-page-special-page-tsx-c0b801fb4d7339a61b18.js","sourcesContent":["import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { IQueryArrayResult, ICategory, IAuthor, IComment, ISpecialPage, ICustomerStory, IGatsbyLocation, ITag } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from \"../../components/Layout/ContentLayout\";\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { PostHeader } from \"../../components/Post/PostHeader\";\r\nimport { ReactHTMLContent } from \"../../components/Content/Content\";\r\nimport { getCategory, mapSidebarComponent, mapFooterComponent, nestCategories } from '../../tool';\r\nimport { SubscriberFooter } from \"../../components/ContentFooter/SubscriberFooter\";\r\nimport { CommentFooter } from \"../../components/ContentFooter/CommentFooter\";\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\n\r\ninterface IQueryResult\r\n{\r\n  data: {\r\n    categories: IQueryArrayResult<ICategory>;\r\n    page: ISpecialPage,\r\n    comments: IQueryArrayResult<IComment>;\r\n    avatar: any;\r\n    stories: IQueryArrayResult<ICustomerStory>;\r\n    tags: IQueryArrayResult<ITag>;\r\n    image: any;\r\n    authorBadge: any;\r\n  }\r\n  context: {\r\n    author: IAuthor;\r\n    comments: IComment[];\r\n  }\r\n  location: IGatsbyLocation;\r\n}\r\n\r\nexport class SpecialPageTemplate extends React.Component<IQueryResult>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n  }\r\n  render()\r\n  {\r\n    let page = this.props.data.page;\r\n    let categories = nestCategories(this.props.data.categories.edges.map(e => e.node));\r\n    let stories = this.props.data.stories.edges.map(e => e.node);\r\n    let cat = page.frontmatter.categories.map(c => getCategory(c, categories));\r\n    let tags: ITag[] = null;\r\n    if(page.frontmatter.tags)\r\n    {\r\n      let tagNodes = this.props.data.tags.edges.map(n => n.node);\r\n      tags = page.frontmatter.tags.map(t => tagNodes.find(tag => tag.slug == t));\r\n    }\r\n\r\n    let header: IHeaderProps = {\r\n      url: page.frontmatter.slug,\r\n      description: page.frontmatter.description,\r\n      type: \"article\",\r\n      title: page.frontmatter.title,\r\n      tags: tags.map(t => t.name),\r\n      image: page.frontmatter.image,\r\n      updated_time: page.frontmatter.updatedate,\r\n      publish_time: page.frontmatter.date\r\n    }\r\n\r\n    return (\r\n      <ContentLayoutWithSidebar \r\n        sidebar={(\r\n          <SideBar isFixed={this.props.data.page.frontmatter.sidebarFixed}>\r\n            {\r\n              page.frontmatter.sidebar.map((c,i) => (\r\n                <div key={i}>\r\n                  {\r\n                    mapSidebarComponent(c, page)\r\n                  }\r\n                </div>\r\n              ))\r\n            }          \r\n          </SideBar>\r\n        )}\r\n        categoryBar={null}\r\n        header={header}\r\n      >\r\n      {\r\n        page.frontmatter.postheader === true ? <PostHeader frontmatter={page.frontmatter} commentCnt={page.fields.commentCnt} author={this.props.context.author} categories={cat} /> : \"\"\r\n      }\r\n        <div className=\"post-content\">\r\n          <ReactHTMLContent html={page.htmlAst}></ReactHTMLContent>\r\n          {\r\n            (page.fields.subscriberContent == null || page.fields.subscriberContent.length == 0) ?          \r\n            \"\"\r\n            : \r\n            <SubscriberFooter content={page.fields.subscriberContent}></SubscriberFooter> \r\n          }\r\n        </div>\r\n        {\r\n          page.frontmatter.comments == true ? \r\n          <CommentFooter slug={page.frontmatter.slug} comments={this.props.context.comments}></CommentFooter> \r\n          : \"\"\r\n        }\r\n\r\n        {\r\n          page.frontmatter.footer.map((c,i) => (\r\n            <div key={i}>\r\n            {\r\n              mapFooterComponent(c, page, cat, this.props.context.author, stories, this.props.data.avatar, this.props.data.tags.edges.map(e => e.node), this.props.location, this.props.data.authorBadge)\r\n            }\r\n            </div>\r\n          ))\r\n        }\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\nconst Page = ({data, pageContext, location}) => {\r\n  return (\r\n    <SpecialPageTemplate location={location} data={data} context={pageContext}></SpecialPageTemplate>\r\n  )\r\n}\r\nexport default Page;\r\n\r\nexport const pageQuery = graphql`\r\n  query SpecialPageById($id: String!, $avatar: String, $authorBadge: String, $image: String!) {\r\n    page: markdownRemark(\r\n      id: { eq: $id }\r\n      fileAbsolutePath: {\r\n        regex: \"/.*\\/data\\/pages\\/.*[.]md/\"\r\n      }\r\n    )\r\n    {\r\n      ...specialPage\r\n    }\r\n    avatar: file(\r\n    \tabsolutePath: { regex: \"/.*\\/data\\/img\\/*/\"}  \r\n      name:{ eq: $avatar}\r\n    ){\r\n      childImageSharp {\r\n        fixed(width: 100, height: 100) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    image: file(\r\n    \tabsolutePath: { eq: $image}  \r\n      name:{ eq: $avatar}\r\n    ){\r\n      childImageSharp {\r\n        fluid(maxWidth: 500, maxHeight: 500) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    authorBadge: file(\r\n    \tabsolutePath: { regex: \"/.*\\/data\\/img\\//\"}  \r\n      name:{ eq: $authorBadge}\r\n    ){\r\n      childImageSharp {\r\n        fixed(width: 100, height: 100) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    ...categories\r\n    ...customerStories\r\n    ...tags\r\n}\r\n`;\r\n"],"sourceRoot":""}