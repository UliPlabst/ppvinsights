{"version":3,"sources":["webpack:///./src/components/SideBar/SideBar.tsx","webpack:///./src/components/CategoryBar/CategoryBar.tsx","webpack:///./src/components/Post/PostHeader.tsx","webpack:///./src/pagecomponents/TagPage/TagPage.tsx","webpack:///./src/components/Post/PostPreview.tsx","webpack:///./src/components/Content/EmptyContent.tsx","webpack:///./src/components/Post/PostList.tsx"],"names":["SideBar","props","onScroll","ev","offset","window","scrollY","container","document","getElementById","setState","fixed","offsetTop","state","componentDidMount","this","isFixed","addEventListener","componentWillUnmount","removeEventListener","render","className","children","React","Component","CategoryBar","title","PostHeader","date","moment","frontmatter","update","updatedate","Math","abs","diff","isAfter","to","author","slug","firstname","lastname","format","subtitle","Tag","posts","data","edges","map","e","node","sort","a","b","fields","timestamp","categories","nestCategories","authors","header","url","urlJoin","context","tag","description","name","type","config","site","tags","sidebar","Page","pageContext","location","pageQuery","PostPreview","post","commentCnt","content","abstract","excerpt","EmptyContent","PostList","p","i","key","c","getCategory","getAuthor","length"],"mappings":"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","file":"component---src-pagecomponents-tag-page-tag-page-tsx-e5750ef7a9f3b607730f.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class SideBar extends React.Component<{isFixed: boolean, children: any}, {fixed: boolean}>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      fixed: false\r\n    }\r\n  }\r\n\r\n  onScroll = (ev: Event) => {\r\n    let offset = window.scrollY;\r\n    let container = document.getElementById(\"content-container\");\r\n    this.setState({\r\n      fixed: offset > container.offsetTop\r\n    });\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    if(this.props.isFixed == true)\r\n      window.addEventListener(\"scroll\", this.onScroll);\r\n  }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    if(this.props.isFixed == true)\r\n      window.removeEventListener(\"scroll\", this.onScroll);\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className={this.state.fixed == true ? \"sidebar-fixed\" : \"sidebar-not-fixed\"}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport \"./CategoryBar.sass\"\r\n\r\ninterface CategoryBarProps {\r\n  title: string;\r\n}\r\n\r\nexport class CategoryBar extends React.Component<CategoryBarProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <h1>\r\n          {this.props.title}\r\n        </h1> */}\r\n        <div className=\"category-bar\">\r\n          {this.props.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { FaClock, FaUser, FaEdit } from \"react-icons/fa\"\r\nimport * as moment from \"moment\";\r\nimport { INestedCategory } from '../../tool';\r\nimport { IAuthor, IPostSummaryFrontmatter } from '../../interfaces';\r\n\r\ninterface IProps\r\n{\r\n  author: IAuthor;\r\n  commentCnt: number;\r\n  isPreview?: boolean;\r\n  frontmatter: IPostSummaryFrontmatter;\r\n  categories: INestedCategory[];\r\n}\r\n\r\nexport class PostHeader extends React.Component<IProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const dateFormat = \"DD. MMM YYYY\"\r\n    let date = moment(this.props.frontmatter.date);\r\n    let update = null;\r\n    if(this.props.frontmatter.updatedate != null && this.props.frontmatter.updatedate != \"\")\r\n    {\r\n      update = moment(this.props.frontmatter.updatedate);\r\n      if(Math.abs(date.diff(update)) >= 86400000 || update.isAfter(date) == true)\r\n      {\r\n        update = moment(this.props.frontmatter.updatedate);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"post-header\">\r\n        <div className=\"post-meta\">\r\n          <div title=\"Author\">\r\n            <Link className=\"post-meta-data post-meta-content\" to={\"/author/\"+this.props.author.frontmatter.slug}> \r\n              <FaUser/> \r\n              <span>{this.props.author != null ? this.props.author.frontmatter.firstname + \" \" + this.props.author.frontmatter.lastname : \"\"}</span>\r\n            </Link>\r\n          </div>\r\n          {\r\n            update != null ? <div title=\"Bearbeitet\" className=\"post-meta-data post-meta-time\">\r\n              <FaEdit/>\r\n              <span className=\"post-meta-content\">{update.format(dateFormat)}</span> \r\n            </div> : \"\"\r\n          }\r\n          <div title=\"Angelegt\" className=\" post-meta-data post-meta-time\">\r\n            <FaClock/> \r\n            <span className=\"post-meta-content\">{date.format(dateFormat)}</span> \r\n          </div>\r\n        </div>\r\n        <div className=\"post-subtitle\">\r\n        {\r\n          this.props.frontmatter.subtitle != null ? <Link to={\"/\"+this.props.frontmatter.slug}>{this.props.frontmatter.subtitle}</Link> : \"\"\r\n        }\r\n        </div>\r\n        <div>\r\n          <h1>\r\n            <Link to={\"/\"+this.props.frontmatter.slug}>{this.props.frontmatter.title}</Link>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { IQueryArrayResult, ICategory, IAuthor, IComment, ISpecialPage, ICustomerStory, IPost, ITag, IGatsbyLocation } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from '../../components/Layout/ContentLayout';\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { getAuthor, nestCategories, urlJoin } from '../../tool';\r\nimport { SideBarQuickstart } from \"../../components/SideBar/SideBarQuickstart\";\r\nimport { SideBarHelp } from \"../../components/SideBar/SideBarHelp\";\r\nimport SideBarCategories from \"../../components/SideBar/SideBarCategories\";\r\nimport { PostPreview } from \"../../components/Post/PostPreview\";\r\nimport { CategoryBar } from \"../../components/CategoryBar/CategoryBar\";\r\nimport { EmptyContent } from \"../../components/Content/EmptyContent\";\r\nimport { PostList } from \"../../components/Post/PostList\";\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\nimport { config } from \"../../config\";\r\n\r\ninterface IQueryResult\r\n{\r\n  data: {\r\n    posts: IQueryArrayResult<IPost>;\r\n    categories: IQueryArrayResult<ICategory>\r\n    authors: IQueryArrayResult<IAuthor>\r\n  }\r\n  context: {\r\n    tag: ITag\r\n  };\r\n  location: IGatsbyLocation;\r\n}\r\n\r\nexport class Tag extends React.Component<IQueryResult>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n  }\r\n  render()\r\n  {\r\n    let posts = this.props.data.posts.edges\r\n      .map(e => e.node)\r\n      .sort((a,b) => {\r\n        if(a.fields.timestamp > b.fields.timestamp)\r\n          return -1\r\n        else\r\n          return 1;\r\n      });\r\n    let categories = nestCategories(this.props.data.categories.edges.map(e => e.node));\r\n    let authors = this.props.data.authors.edges.map(e => e.node);\r\n\r\n    let header: IHeaderProps = {\r\n      url: urlJoin(\"tag\", this.props.context.tag.slug),\r\n      description: `Posts über ${this.props.context.tag.name}`,\r\n      type: \"object\",\r\n      title: `${this.props.context.tag.name} Archive | ${config.site.title}`,\r\n      tags: [this.props.context.tag.name],\r\n    }\r\n\r\n    return (\r\n      <ContentLayoutWithSidebar \r\n      header={header}\r\n      sidebar={(\r\n        <SideBar isFixed={true}>\r\n          <SideBarQuickstart></SideBarQuickstart>\r\n          <SideBarHelp></SideBarHelp>\r\n          <SideBarCategories></SideBarCategories>\r\n        </SideBar>\r\n      )} \r\n      >\r\n      <CategoryBar title={\"Tags / \"+this.props.context.tag.name}></CategoryBar>\r\n      <PostList posts={posts} categories={categories} authors={authors}/>\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\nconst Page = ({pageContext, data, location}) => {\r\n  return (\r\n    <Tag data={data} location={location} context={pageContext}></Tag>\r\n  )\r\n}\r\nexport default Page;\r\n\r\n\r\nexport const pageQuery = graphql`\r\n  query tagsPosts($tagSlug: String!, $now: Int!) {\r\n    posts: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: {\r\n          regex: \"/.*/data/posts/.*[.]md/\"\r\n        }, \r\n        frontmatter: {\r\n          tags: {eq: $tagSlug}\r\n        }\r\n        fields: {\r\n            publishTimestamp:{\r\n            lt: $now\r\n          }\r\n        }\r\n      }) {\r\n      edges {\r\n        node {\r\n          ...postShort\r\n        }\r\n      }\r\n    }\r\n    ...categories\r\n    ...authorsMarkdown\r\n  }\r\n`\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { PostHeader } from './PostHeader';\r\nimport { HTMLContent } from \"../Content/Content\";\r\nimport { INestedCategory } from \"../../tool\";\r\nimport { IPostSummary, IAuthor } from \"../../interfaces\";\r\n\r\ninterface Props\r\n{\r\n  post: IPostSummary;\r\n  categories: INestedCategory[];\r\n  author: IAuthor;\r\n}\r\n\r\nexport class PostPreview extends React.Component<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { post } = this.props;\r\n    return (\r\n      <div className=\"post-preview\">\r\n        <div>\r\n          <PostHeader frontmatter={post.frontmatter} commentCnt={post.fields.commentCnt} author={this.props.author} categories={this.props.categories}/>\r\n        </div>\r\n        <div className=\"post-content\">\r\n        <Link to={\"/\"+post.frontmatter.slug}>\r\n          <HTMLContent content={this.props.post.fields.abstract ? this.props.post.fields.abstract : this.props.post.excerpt}> </HTMLContent>\r\n        </Link>\r\n          {/* <div>\r\n            <Link to={post.frontmatter.slug}><span style={{verticalAlign: \"middle\"}}><FaLongArrowAltRight/></span> Mehr</Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./Content.sass\"\r\n\r\nexport class EmptyContent extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"empty-content-container\">Hier gibt es noch keine Inhalte</div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IAuthor, IPostSummary } from '../../interfaces';\r\nimport { getCategory, getAuthor, INestedCategory } from \"../../tool\";\r\nimport { PostPreview } from \"./PostPreview\";\r\nimport { EmptyContent } from \"../Content/EmptyContent\";\r\n\r\n\r\n\r\nexport class PostList extends React.Component<{posts: IPostSummary[], categories: INestedCategory[], authors: IAuthor[]}>\r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n      {\r\n        this.props.posts.map((p,i) => (\r\n          <div key={i}>\r\n            <PostPreview post={p} categories={p.frontmatter.categories.map(c => getCategory(c, this.props.categories))} author={getAuthor(p.frontmatter.author, this.props.authors)}></PostPreview>\r\n          </div>\r\n        ))\r\n      }\r\n      {\r\n        this.props.posts.length == 0 ? <EmptyContent/> : \"\"\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}