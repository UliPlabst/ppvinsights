{"version":3,"sources":["webpack:///./src/pagecomponents/Blog/BlogPage.tsx","webpack:///./src/components/Post/PostPreview.tsx","webpack:///./src/components/Content/EmptyContent.tsx","webpack:///./src/components/Post/PostList.tsx"],"names":["Blog","props","render","posts","this","data","edges","map","e","node","sort","a","b","fields","timestamp","categories","nestCategories","authors","header","url","description","type","title","config","site","tags","sidebar","isFixed","className","to","fixed","pbi","childImageSharp","style","marginRight","filter","pq","ppv","marginTop","React","Component","Page","pageContext","location","context","pageQuery","PostPreview","post","PostHeader","frontmatter","commentCnt","author","slug","content","abstract","excerpt","EmptyContent","PostList","p","i","key","c","getCategory","getAuthor","length"],"mappings":"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","file":"component---src-pagecomponents-blog-blog-page-tsx-de084616f862739627e6.js","sourcesContent":["import { graphql, Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { IQueryArrayResult, ICategory, IAuthor, IPost, ITag, IGatsbyLocation } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from '../../components/Layout/ContentLayout';\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { nestCategories } from '../../tool';\r\nimport { SideBarQuickstart } from \"../../components/SideBar/SideBarQuickstart\";\r\nimport { SideBarHelp } from \"../../components/SideBar/SideBarHelp\";\r\nimport SideBarCategories from \"../../components/SideBar/SideBarCategories\";\r\nimport { PostList } from '../../components/Post/PostList';\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\nimport { config } from \"../../config\";\r\nimport Img from 'gatsby-image';\r\nimport \"./BlogPage.sass\"\r\n\r\ninterface IQueryResult\r\n{\r\n  data: {\r\n    posts: IQueryArrayResult<IPost>;\r\n    categories: IQueryArrayResult<ICategory>\r\n    authors: IQueryArrayResult<IAuthor>\r\n    tags: IQueryArrayResult<ITag>\r\n    pbi: any,\r\n    ppv: any,\r\n    pq: any\r\n  };\r\n  context: any;\r\n  location: IGatsbyLocation;\r\n}\r\n\r\n\r\nexport class Blog extends React.Component<IQueryResult>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n  }\r\n  render(){\r\n    let posts = this.props.data.posts.edges\r\n      .map(e => e.node)\r\n      .sort((a,b) => {\r\n        if(a.fields.timestamp > b.fields.timestamp)\r\n          return -1\r\n        else\r\n          return 1;\r\n      });\r\n    let categories            = nestCategories(this.props.data.categories.edges.map(e => e.node));\r\n    let authors               = this.props.data.authors.edges.map(e => e.node);\r\n\r\n    let header: IHeaderProps = {\r\n      url: \"blog\",\r\n      description: `Blog about Power BI, Power Pivot and Power Query  `,\r\n      type: \"object\",\r\n      title: `Blog Archive | ${config.site.title}`,\r\n      tags: [\"blog\"]\r\n    }\r\n\r\n    return (\r\n      <ContentLayoutWithSidebar\r\n      header={header} \r\n      sidebar={(\r\n        <SideBar isFixed={true}>\r\n          <SideBarQuickstart></SideBarQuickstart>\r\n          <SideBarHelp></SideBarHelp>\r\n          <SideBarCategories></SideBarCategories>\r\n        </SideBar>\r\n      )} \r\n      >\r\n      <div className=\"category-section\">\r\n        <Link to=\"/category/power-bi\"  className=\"button action-button\">\r\n          <Img fixed={this.props.data.pbi.childImageSharp.fixed} style={{marginRight: \"5px\",  filter: \"invert(1)\"}}></Img>\r\n          Power BI\r\n        </Link>\r\n        <Link to=\"/category/power-query\" className=\"button action-button\">\r\n          <Img fixed={this.props.data.pq.childImageSharp.fixed} style={{marginRight: \"5px\",}}></Img>\r\n          Power Query\r\n          </Link>\r\n        <Link to=\"/category/power-pivot\" className=\"button action-button\">\r\n          <Img fixed={this.props.data.ppv.childImageSharp.fixed} style={{marginRight: \"5px\",  filter: \"invert(1)\"}}></Img>\r\n          Power Pivot\r\n        </Link>\r\n      </div>\r\n      <div style={{marginTop: \"10px\"}}>\r\n        <PostList posts={posts} categories={categories} authors={authors}/>\r\n      </div>\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\nconst Page = ({pageContext, data, location}) => {\r\n  return (\r\n    <Blog data={data} location={location} context={pageContext}></Blog>\r\n  );\r\n};\r\nexport default Page;\r\n\r\nexport const pageQuery = graphql`\r\nquery posts($now: Int!) {\r\n  posts: allMarkdownRemark(\r\n    filter: {\r\n      fileAbsolutePath: {\r\n        regex: \"/.*/data/posts/.*[.]md/\"\r\n      }, \r\n      fields: {\r\n        publishTimestamp:{\r\n          lt: $now\r\n        }\r\n      }\r\n    }) {\r\n    edges {\r\n      node {\r\n        ...postShort\r\n      }\r\n    }\r\n  }\r\n  pbi: file(\r\n    absolutePath: { regex: \"/.*\\/data\\/img\\//\"}  \r\n    name:{ eq: \"power-bi\"}\r\n  ){\r\n    childImageSharp {\r\n      fixed(width: 20, height: 20, grayscale: true) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  },\r\n  ppv: file(\r\n    absolutePath: { regex: \"/.*\\/data\\/img\\//\"}  \r\n    name:{ eq: \"power-pivot\"}\r\n  ){\r\n    childImageSharp {\r\n      fixed(width: 20, height: 20, grayscale: true) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  pq: file(\r\n    absolutePath: { regex: \"/.*\\/data\\/img\\//\"}  \r\n    name:{ eq: \"power-query\"}\r\n  ){\r\n    childImageSharp {\r\n      fixed(width: 20, height: 20, grayscale: true) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  ...categories\r\n  ...authorsMarkdown\r\n  ...tags\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { PostHeader } from './PostHeader';\r\nimport { HTMLContent } from \"../Content/Content\";\r\nimport { INestedCategory } from \"../../tool\";\r\nimport { IPostSummary, IAuthor } from \"../../interfaces\";\r\n\r\ninterface Props\r\n{\r\n  post: IPostSummary;\r\n  categories: INestedCategory[];\r\n  author: IAuthor;\r\n}\r\n\r\nexport class PostPreview extends React.Component<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { post } = this.props;\r\n    return (\r\n      <div className=\"post-preview\">\r\n        <div>\r\n          <PostHeader frontmatter={post.frontmatter} commentCnt={post.fields.commentCnt} author={this.props.author} categories={this.props.categories}/>\r\n        </div>\r\n        <div className=\"post-content\">\r\n        <Link to={\"/\"+post.frontmatter.slug}>\r\n          <HTMLContent content={this.props.post.fields.abstract ? this.props.post.fields.abstract : this.props.post.excerpt}> </HTMLContent>\r\n        </Link>\r\n          {/* <div>\r\n            <Link to={post.frontmatter.slug}><span style={{verticalAlign: \"middle\"}}><FaLongArrowAltRight/></span> Mehr</Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./Content.sass\"\r\n\r\nexport class EmptyContent extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"empty-content-container\">Hier gibt es noch keine Inhalte</div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IAuthor, IPostSummary } from '../../interfaces';\r\nimport { getCategory, getAuthor, INestedCategory } from \"../../tool\";\r\nimport { PostPreview } from \"./PostPreview\";\r\nimport { EmptyContent } from \"../Content/EmptyContent\";\r\n\r\n\r\n\r\nexport class PostList extends React.Component<{posts: IPostSummary[], categories: INestedCategory[], authors: IAuthor[]}>\r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n      {\r\n        this.props.posts.map((p,i) => (\r\n          <div key={i}>\r\n            <PostPreview post={p} categories={p.frontmatter.categories.map(c => getCategory(c, this.props.categories))} author={getAuthor(p.frontmatter.author, this.props.authors)}></PostPreview>\r\n          </div>\r\n        ))\r\n      }\r\n      {\r\n        this.props.posts.length == 0 ? <EmptyContent/> : \"\"\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}