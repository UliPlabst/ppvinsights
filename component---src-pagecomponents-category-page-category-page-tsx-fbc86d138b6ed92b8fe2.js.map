{"version":3,"sources":["webpack:///./src/components/SideBar/SideBar.tsx","webpack:///./src/pagecomponents/CategoryPage/CategoryPage.tsx","webpack:///./src/components/CategoryBar/CategoryBar.tsx","webpack:///./src/components/Post/PostHeader.tsx","webpack:///./src/components/Post/PostPreview.tsx","webpack:///./src/components/Content/EmptyContent.tsx","webpack:///./src/components/Post/PostList.tsx"],"names":["SideBar","props","onScroll","ev","offset","window","scrollY","container","document","getElementById","setState","fixed","offsetTop","state","componentDidMount","this","isFixed","addEventListener","componentWillUnmount","removeEventListener","render","className","children","React","Component","Category","posts","data","edges","map","e","node","sort","a","b","fields","timestamp","categories","nestCategories","authors","currentCategory","getCategory","context","cat","currentCategoryString","friendlyname","currentCategoryPath","slug","c","parent","headerTags","urlJoin","push","header","url","description","type","title","config","site","tags","sidebar","Page","pageContext","location","pageQuery","CategoryBar","PostHeader","date","moment","frontmatter","update","updatedate","Math","abs","diff","isAfter","noPrefetch","to","author","firstname","lastname","format","subtitle","PostPreview","post","commentCnt","content","abstract","excerpt","EmptyContent","PostList","p","i","key","getAuthor","length"],"mappings":"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","file":"component---src-pagecomponents-category-page-category-page-tsx-fbc86d138b6ed92b8fe2.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class SideBar extends React.Component<{isFixed: boolean, children: any}, {fixed: boolean}>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      fixed: false\r\n    }\r\n  }\r\n\r\n  onScroll = (ev: Event) => {\r\n    let offset = window.scrollY;\r\n    let container = document.getElementById(\"content-container\");\r\n    this.setState({\r\n      fixed: offset > container.offsetTop\r\n    });\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    if(this.props.isFixed == true)\r\n      window.addEventListener(\"scroll\", this.onScroll);\r\n  }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    if(this.props.isFixed == true)\r\n      window.removeEventListener(\"scroll\", this.onScroll);\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className={this.state.fixed == true ? \"sidebar-fixed\" : \"sidebar-not-fixed\"}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}","import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { IQueryArrayResult, ICategory, IAuthor, IPost, ITag, IGatsbyLocation } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from '../../components/Layout/ContentLayout';\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { nestCategories, getCategory, urlJoin } from '../../tool';\r\nimport { SideBarQuickstart } from \"../../components/SideBar/SideBarQuickstart\";\r\nimport { SideBarHelp } from \"../../components/SideBar/SideBarHelp\";\r\nimport SideBarCategories from \"../../components/SideBar/SideBarCategories\";\r\nimport { CategoryBar } from \"../../components/CategoryBar/CategoryBar\";\r\nimport { PostList } from '../../components/Post/PostList';\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\nimport { config } from \"../../config\";\r\n\r\ninterface IQueryResult\r\n{\r\n  data: {\r\n    posts: IQueryArrayResult<IPost>;\r\n    categories: IQueryArrayResult<ICategory>\r\n    authors: IQueryArrayResult<IAuthor>\r\n    tags: IQueryArrayResult<ITag>\r\n  };\r\n  context: any;\r\n  location: IGatsbyLocation;\r\n}\r\n\r\n\r\nexport class Category extends React.Component<IQueryResult>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n  }\r\n  render(){\r\n    let posts = this.props.data.posts.edges\r\n      .map(e => e.node)\r\n      .sort((a,b) => {\r\n        if(a.fields.timestamp > b.fields.timestamp)\r\n          return -1\r\n        else\r\n          return 1;\r\n      });\r\n    let categories            = nestCategories(this.props.data.categories.edges.map(e => e.node));\r\n    let authors               = this.props.data.authors.edges.map(e => e.node);\r\n    let currentCategory       = getCategory(this.props.context.cat, categories);\r\n    let currentCategoryString = currentCategory.friendlyname;\r\n    let currentCategoryPath   = currentCategory.slug;\r\n    let c                     = currentCategory.parent;\r\n    let headerTags            = [currentCategory.friendlyname];\r\n\r\n    while(c != null)\r\n    {\r\n      currentCategoryString = c.friendlyname + \" / \" + currentCategoryString;\r\n      currentCategoryPath   = urlJoin(c.slug, currentCategoryPath)\r\n      headerTags.push(c.friendlyname);\r\n\r\n      c = c.parent;\r\n    }\r\n\r\n    let header: IHeaderProps = {\r\n      url: urlJoin(\"category\", currentCategoryPath),\r\n      description: `Posts about ${currentCategory.friendlyname}`,\r\n      type: \"object\",\r\n      title: `${currentCategory.friendlyname} Archive | ${config.site.title}`,\r\n      tags: headerTags\r\n    }\r\n\r\n    return (\r\n      <ContentLayoutWithSidebar\r\n      header={header} \r\n      sidebar={(\r\n        <SideBar isFixed={true}>\r\n          <SideBarQuickstart></SideBarQuickstart>\r\n          <SideBarHelp></SideBarHelp>\r\n          <SideBarCategories></SideBarCategories>\r\n        </SideBar>\r\n      )} \r\n      >\r\n      <CategoryBar title={\"Kategorie / \"+currentCategoryString}/>\r\n      <PostList posts={posts} categories={categories} authors={authors}/>\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\nconst Page = ({pageContext, data, location}) => {\r\n  return (\r\n    <Category data={data} location={location} context={pageContext}></Category>\r\n  );\r\n};\r\nexport default Page;\r\n\r\nexport const pageQuery = graphql`\r\n  query categoryPosts($cat: String!, $now: Int!) {\r\n    posts: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: {\r\n          regex: \"/.*/data/posts/.*[.]md/\"\r\n        }, \r\n        frontmatter: {\r\n          categories: {\r\n            eq: $cat\r\n          }\r\n        }\r\n        fields: {\r\n          publishTimestamp:{\r\n            lt: $now\r\n          }\r\n        }\r\n      }) {\r\n      edges {\r\n        node {\r\n          ...postShort\r\n        }\r\n      }\r\n    }\r\n    ...categories\r\n    ...authorsMarkdown\r\n    ...tags\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport \"./CategoryBar.sass\"\r\n\r\ninterface CategoryBarProps {\r\n  title: string;\r\n}\r\n\r\nexport class CategoryBar extends React.Component<CategoryBarProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <h1>\r\n          {this.props.title}\r\n        </h1> */}\r\n        <div className=\"category-bar\">\r\n          {this.props.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"../Misc\";\r\nimport \"./Post.sass\";\r\nimport { FaClock, FaUser, FaEdit } from \"react-icons/fa\"\r\nimport * as moment from \"moment\";\r\nimport { INestedCategory } from '../../tool';\r\nimport { IAuthor, IPostSummaryFrontmatter } from '../../interfaces';\r\n\r\ninterface IProps\r\n{\r\n  author: IAuthor;\r\n  commentCnt: number;\r\n  isPreview?: boolean;\r\n  frontmatter: IPostSummaryFrontmatter;\r\n  categories: INestedCategory[];\r\n}\r\n\r\nexport class PostHeader extends React.Component<IProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const dateFormat = \"DD. MMM YYYY\"\r\n    let date = moment(this.props.frontmatter.date);\r\n    let update = null;\r\n    if(this.props.frontmatter.updatedate != null && this.props.frontmatter.updatedate != \"\")\r\n    {\r\n      update = moment(this.props.frontmatter.updatedate);\r\n      if(Math.abs(date.diff(update)) >= 86400000 || update.isAfter(date) == true)\r\n      {\r\n        update = moment(this.props.frontmatter.updatedate);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"post-header\">\r\n        <div className=\"post-meta\">\r\n          <div title=\"Author\">\r\n            <Link noPrefetch={true} className=\"post-meta-data post-meta-content\" to={\"/author/\"+this.props.author.frontmatter.slug}> \r\n              <FaUser/> \r\n              <span>{this.props.author != null ? this.props.author.frontmatter.firstname + \" \" + this.props.author.frontmatter.lastname : \"\"}</span>\r\n            </Link>\r\n          </div>\r\n          {\r\n            update != null ? <div title=\"Bearbeitet\" className=\"post-meta-data post-meta-time\">\r\n              <FaEdit/>\r\n              <span className=\"post-meta-content\">{update.format(dateFormat)}</span> \r\n            </div> : \"\"\r\n          }\r\n          <div title=\"Angelegt\" className=\" post-meta-data post-meta-time\">\r\n            <FaClock/> \r\n            <span className=\"post-meta-content\">{date.format(dateFormat)}</span> \r\n          </div>\r\n        </div>\r\n        <div className=\"post-subtitle\">\r\n        {\r\n          this.props.frontmatter.subtitle != null ? <Link to={\"/\"+this.props.frontmatter.slug}>{this.props.frontmatter.subtitle}</Link> : \"\"\r\n        }\r\n        </div>\r\n        <div>\r\n          <h1>\r\n            <Link to={\"/\"+this.props.frontmatter.slug}>{this.props.frontmatter.title}</Link>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"../Misc\";\r\nimport \"./Post.sass\";\r\nimport { PostHeader } from './PostHeader';\r\nimport { HTMLContent } from \"../Content/Content\";\r\nimport { INestedCategory } from \"../../tool\";\r\nimport { IPostSummary, IAuthor } from \"../../interfaces\";\r\n\r\ninterface Props\r\n{\r\n  post: IPostSummary;\r\n  categories: INestedCategory[];\r\n  author: IAuthor;\r\n}\r\n\r\nexport class PostPreview extends React.Component<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { post } = this.props;\r\n    return (\r\n      <div className=\"post-preview\">\r\n        <div>\r\n          <PostHeader frontmatter={post.frontmatter} commentCnt={post.fields.commentCnt} author={this.props.author} categories={this.props.categories}/>\r\n        </div>\r\n        <div className=\"post-content\">\r\n        <Link to={\"/\"+post.frontmatter.slug}>\r\n          <HTMLContent content={this.props.post.fields.abstract ? this.props.post.fields.abstract : this.props.post.excerpt}> </HTMLContent>\r\n        </Link>\r\n          {/* <div>\r\n            <Link to={post.frontmatter.slug}><span style={{verticalAlign: \"middle\"}}><FaLongArrowAltRight/></span> Mehr</Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./Content.sass\"\r\n\r\nexport class EmptyContent extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"empty-content-container\">Hier gibt es noch keine Inhalte</div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IAuthor, IPostSummary } from '../../interfaces';\r\nimport { getCategory, getAuthor, INestedCategory } from \"../../tool\";\r\nimport { PostPreview } from \"./PostPreview\";\r\nimport { EmptyContent } from \"../Content/EmptyContent\";\r\n\r\n\r\n\r\nexport class PostList extends React.Component<{posts: IPostSummary[], categories: INestedCategory[], authors: IAuthor[]}>\r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n      {\r\n        this.props.posts.map((p,i) => (\r\n          <div key={i}>\r\n            <PostPreview post={p} categories={p.frontmatter.categories.map(c => getCategory(c, this.props.categories))} author={getAuthor(p.frontmatter.author, this.props.authors)}></PostPreview>\r\n          </div>\r\n        ))\r\n      }\r\n      {\r\n        this.props.posts.length == 0 ? <EmptyContent/> : \"\"\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}