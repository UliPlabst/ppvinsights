{"version":3,"sources":["webpack:///./src/components/SideBar/SideBar.tsx","webpack:///./src/components/CategoryBar/CategoryBar.tsx","webpack:///./src/components/Post/PostHeader.tsx","webpack:///./src/components/Search/SearchResults.tsx","webpack:///./src/pagecomponents/SearchPage/SearchPage.tsx","webpack:///./src/components/Post/PostPreview.tsx","webpack:///./src/components/Content/EmptyContent.tsx","webpack:///./src/components/Post/PostList.tsx"],"names":["SideBar","props","onScroll","ev","offset","window","scrollY","container","document","getElementById","setState","fixed","offsetTop","state","componentDidMount","this","isFixed","addEventListener","componentWillUnmount","removeEventListener","render","className","children","React","Component","CategoryBar","title","PostHeader","date","moment","frontmatter","update","updatedate","Math","abs","diff","isAfter","to","author","slug","firstname","lastname","format","subtitle","SearchResults","searchChangedHandler","q","a","updateSearch","posts","cnt","finished","query","SearchService","registerHandler","trim","postData","config","elasticSearchUri","_source","multi_match","fields","size","elasticSearchResultLimit","headers","Authorization","elsaticBasicAuth","res","hits","map","s","r","image","categories","abstract","commentCnt","length","AppInsightsService","trackError","undefined","o","getQueryObject","decodeURIComponent","unregisterHandler","nestCategories","data","edges","e","node","authors","PostList","Search","ContentLayout","header","url","description","type","tags","sidebar","SideBarQuickstart","SideBarHelp","SideBarCategories","pageQuery","Page","pageContext","location","context","PostPreview","post","content","excerpt","EmptyContent","p","i","key","c","getCategory","getAuthor"],"mappings":"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","file":"component---src-pagecomponents-search-page-search-page-tsx-2f36b4bcc606ea2f6344.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class SideBar extends React.Component<{isFixed: boolean, children: any}, {fixed: boolean}>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      fixed: false\r\n    }\r\n  }\r\n\r\n  onScroll = (ev: Event) => {\r\n    let offset = window.scrollY;\r\n    let container = document.getElementById(\"content-container\");\r\n    this.setState({\r\n      fixed: offset > container.offsetTop\r\n    });\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    if(this.props.isFixed == true)\r\n      window.addEventListener(\"scroll\", this.onScroll);\r\n  }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    if(this.props.isFixed == true)\r\n      window.removeEventListener(\"scroll\", this.onScroll);\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className={this.state.fixed == true ? \"sidebar-fixed\" : \"sidebar-not-fixed\"}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport \"./CategoryBar.sass\"\r\n\r\ninterface CategoryBarProps {\r\n  title: string;\r\n}\r\n\r\nexport class CategoryBar extends React.Component<CategoryBarProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <h1>\r\n          {this.props.title}\r\n        </h1> */}\r\n        <div className=\"category-bar\">\r\n          {this.props.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { FaClock, FaUser, FaEdit } from \"react-icons/fa\"\r\nimport * as moment from \"moment\";\r\nimport { INestedCategory } from '../../tool';\r\nimport { IAuthor, IPostSummaryFrontmatter } from '../../interfaces';\r\n\r\ninterface IProps\r\n{\r\n  author: IAuthor;\r\n  commentCnt: number;\r\n  isPreview?: boolean;\r\n  frontmatter: IPostSummaryFrontmatter;\r\n  categories: INestedCategory[];\r\n}\r\n\r\nexport class PostHeader extends React.Component<IProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const dateFormat = \"DD. MMM YYYY\"\r\n    let date = moment(this.props.frontmatter.date);\r\n    let update = null;\r\n    if(this.props.frontmatter.updatedate != null && this.props.frontmatter.updatedate != \"\")\r\n    {\r\n      update = moment(this.props.frontmatter.updatedate);\r\n      if(Math.abs(date.diff(update)) >= 86400000 || update.isAfter(date) == true)\r\n      {\r\n        update = moment(this.props.frontmatter.updatedate);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"post-header\">\r\n        <div className=\"post-meta\">\r\n          <div title=\"Author\">\r\n            <Link className=\"post-meta-data post-meta-content\" to={\"/author/\"+this.props.author.frontmatter.slug}> \r\n              <FaUser/> \r\n              <span>{this.props.author != null ? this.props.author.frontmatter.firstname + \" \" + this.props.author.frontmatter.lastname : \"\"}</span>\r\n            </Link>\r\n          </div>\r\n          {\r\n            update != null ? <div title=\"Bearbeitet\" className=\"post-meta-data post-meta-time\">\r\n              <FaEdit/>\r\n              <span className=\"post-meta-content\">{update.format(dateFormat)}</span> \r\n            </div> : \"\"\r\n          }\r\n          <div title=\"Angelegt\" className=\" post-meta-data post-meta-time\">\r\n            <FaClock/> \r\n            <span className=\"post-meta-content\">{date.format(dateFormat)}</span> \r\n          </div>\r\n        </div>\r\n        <div className=\"post-subtitle\">\r\n        {\r\n          this.props.frontmatter.subtitle != null ? <Link to={\"/\"+this.props.frontmatter.slug}>{this.props.frontmatter.subtitle}</Link> : \"\"\r\n        }\r\n        </div>\r\n        <div>\r\n          <h1>\r\n            <Link to={\"/\"+this.props.frontmatter.slug}>{this.props.frontmatter.title}</Link>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import * as React from \"react\";\r\nimport { postData, nestCategories, getQueryObject } from '../../tool';\r\nimport { config } from \"../../config\";\r\nimport { PostList } from \"../Post/PostList\";\r\nimport { ICategory, IAuthor, IQueryArrayResult, IPost, IPostSummary } from '../../interfaces';\r\nimport { CategoryBar } from \"../CategoryBar/CategoryBar\";\r\nimport { SearchService } from '../../services/SearchService';\r\nimport { AppInsightsService } from \"../../services/AppInsightsService\";\r\n\r\ninterface Props\r\n{\r\n  data: {\r\n    categories: IQueryArrayResult<ICategory>\r\n    authors: IQueryArrayResult<IAuthor>\r\n  }\r\n}\r\n\r\ninterface IQueryResult\r\n{\r\n  hits: {\r\n    total: {\r\n      value: number;\r\n      relation: string;\r\n    }\r\n    max_score: number;\r\n    hits: IHit[];\r\n  }\r\n}\r\n\r\ninterface IHit\r\n{\r\n  _source: {\r\n    title: string;\r\n    date: string;\r\n    updatedate: string;\r\n    image: string;\r\n    author: string;\r\n    subtitle: string;\r\n    abstract: string;\r\n    slug: string;\r\n    commentCnt: number;\r\n    categories: string[];\r\n  }\r\n}\r\n\r\nexport class SearchResults extends React.Component<Props, { posts: IPostSummary[], cnt: number, finished: boolean, query: string}>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      cnt: 0,\r\n      finished: false,\r\n      query: \"\"\r\n    };\r\n    SearchService.registerHandler(this.searchChangedHandler)\r\n  }\r\n  \r\n  searchChangedHandler = async (q) => {\r\n    await this.updateSearch(q);\r\n  }\r\n  \r\n  async updateSearch(query: string)\r\n  {\r\n    try \r\n    {\r\n      this.setState({\r\n        query,\r\n        finished: false\r\n      });\r\n      if(query != null && query.trim() != \"\")\r\n      {\r\n        let res = await postData<IQueryResult>(config.elasticSearchUri + \"/docs/_search?pretty=true\", {\r\n          _source: [\"slug\", \"abstract\", \"title\", \"subtitle\", \"updatedate\", \"date\", \"author\", \"image\", \"categories\", \"commentCnt\"],\r\n          query: {\r\n            multi_match: {\r\n              query: query,\r\n              fields: [\"tags\", \"title\", \"subtitle\", \"abstract\", \"author\", \"text\"]\r\n            }\r\n          },\r\n          size: config.elasticSearchResultLimit\r\n        }, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Basic \"+config.elsaticBasicAuth\r\n          }\r\n        });\r\n        \r\n        if(res && res.hits && res.hits.hits)\r\n        {\r\n          this.setState({\r\n            posts: res.hits.hits.map(s => {\r\n              let r = s._source;\r\n              return {\r\n                frontmatter: {\r\n                  title: r.title,\r\n                  date: r.date,\r\n                  updatedate: r.updatedate,\r\n                  image: r.image,\r\n                  subtitle: r.subtitle,\r\n                  slug: r.slug,\r\n                  author: r.author,\r\n                  categories: r.categories,\r\n                },\r\n                fields: {\r\n                  abstract: r.abstract,\r\n                  commentCnt: r.commentCnt\r\n                }\r\n              }\r\n            }),\r\n            cnt: res.hits.hits.length,\r\n            finished: true\r\n          });\r\n        }\r\n      }\r\n    }\r\n    catch(error)\r\n    {\r\n      AppInsightsService.trackError(\"Error fetching search results\", error);\r\n    }\r\n    finally\r\n    {\r\n      this.setState({\r\n        finished: true\r\n      })\r\n    }\r\n  }\r\n  \r\n  async componentDidMount()\r\n  {\r\n    if(typeof window !== undefined)\r\n    {\r\n      let o = getQueryObject();\r\n      let query = decodeURIComponent(o.query);\r\n      this.updateSearch(query);\r\n    }\r\n  }\r\n  \r\n  componentWillUnmount()\r\n  {\r\n    SearchService.unregisterHandler(this.searchChangedHandler);\r\n  }\r\n  \r\n  render()\r\n  {\r\n    let categories = nestCategories(this.props.data.categories.edges.map(e => e.node));\r\n    let authors    = this.props.data.authors.edges.map(e => e.node);\r\n    \r\n    return (\r\n      <div className=\"search-results-container\">\r\n        {\r\n          this.state.finished == true ? (\r\n            <>\r\n              <CategoryBar title={`${this.state.cnt} Suchergebnisse für '${this.state.query}'`}/>\r\n              <PostList posts={this.state.posts} categories={categories} authors={authors}></PostList>\r\n            </>\r\n          ) : (\r\n            <CategoryBar title={`Lade Ergebnisse...`}/>\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { IQueryArrayResult, ICategory, IAuthor, IGatsbyLocation } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from '../../components/Layout/ContentLayout';\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { SideBarQuickstart } from \"../../components/SideBar/SideBarQuickstart\";\r\nimport { SideBarHelp } from \"../../components/SideBar/SideBarHelp\";\r\nimport SideBarCategories from \"../../components/SideBar/SideBarCategories\";\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\nimport { SearchResults } from '../../components/Search/SearchResults';\r\n\r\ninterface IQueryResult\r\n{\r\n  data: {\r\n    categories: IQueryArrayResult<ICategory>\r\n    authors: IQueryArrayResult<IAuthor>\r\n  };\r\n  context: any;\r\n  location: IGatsbyLocation;\r\n}\r\n\r\n\r\nexport class Search extends React.Component<IQueryResult>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n  }\r\n  render(){\r\n    let header: IHeaderProps = {\r\n      url: \"search\",\r\n      description: `Sucherergebnisse`,\r\n      type: \"object\",\r\n      title: `Suchergebnisse`,\r\n      tags: [\"search\"]\r\n    }\r\n    let query = \"power\";\r\n    return (\r\n      <ContentLayoutWithSidebar\r\n      header={header} \r\n      sidebar={(\r\n        <SideBar isFixed={true}>\r\n          <SideBarQuickstart></SideBarQuickstart>\r\n          <SideBarHelp></SideBarHelp>\r\n          <SideBarCategories></SideBarCategories>\r\n        </SideBar>\r\n      )} \r\n      >\r\n      <SearchResults data={this.props.data}></SearchResults>\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\nconst Page = ({pageContext, data, location}) => {\r\n  return (\r\n    <Search data={data} location={location} context={pageContext}></Search>\r\n  );\r\n};\r\nexport default Page;\r\n\r\nexport const pageQuery = graphql`\r\n{\r\n    ...categories\r\n    ...authorsMarkdown\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { PostHeader } from './PostHeader';\r\nimport { HTMLContent } from \"../Content/Content\";\r\nimport { INestedCategory } from \"../../tool\";\r\nimport { IPostSummary, IAuthor } from \"../../interfaces\";\r\n\r\ninterface Props\r\n{\r\n  post: IPostSummary;\r\n  categories: INestedCategory[];\r\n  author: IAuthor;\r\n}\r\n\r\nexport class PostPreview extends React.Component<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { post } = this.props;\r\n    return (\r\n      <div className=\"post-preview\">\r\n        <div>\r\n          <PostHeader frontmatter={post.frontmatter} commentCnt={post.fields.commentCnt} author={this.props.author} categories={this.props.categories}/>\r\n        </div>\r\n        <div className=\"post-content\">\r\n        <Link to={\"/\"+post.frontmatter.slug}>\r\n          <HTMLContent content={this.props.post.fields.abstract ? this.props.post.fields.abstract : this.props.post.excerpt}> </HTMLContent>\r\n        </Link>\r\n          {/* <div>\r\n            <Link to={post.frontmatter.slug}><span style={{verticalAlign: \"middle\"}}><FaLongArrowAltRight/></span> Mehr</Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./Content.sass\"\r\n\r\nexport class EmptyContent extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"empty-content-container\">Hier gibt es noch keine Inhalte</div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IAuthor, IPostSummary } from '../../interfaces';\r\nimport { getCategory, getAuthor, INestedCategory } from \"../../tool\";\r\nimport { PostPreview } from \"./PostPreview\";\r\nimport { EmptyContent } from \"../Content/EmptyContent\";\r\n\r\n\r\n\r\nexport class PostList extends React.Component<{posts: IPostSummary[], categories: INestedCategory[], authors: IAuthor[]}>\r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n      {\r\n        this.props.posts.map((p,i) => (\r\n          <div key={i}>\r\n            <PostPreview post={p} categories={p.frontmatter.categories.map(c => getCategory(c, this.props.categories))} author={getAuthor(p.frontmatter.author, this.props.authors)}></PostPreview>\r\n          </div>\r\n        ))\r\n      }\r\n      {\r\n        this.props.posts.length == 0 ? <EmptyContent/> : \"\"\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}